[
    {
        "id": "c33883f1dd3f683f",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eee261dab0f5e97b",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Fetch frame",
        "func": "const personCodeLastFourDigits = 7668;\nconst numberOfMessages = 7711;\nconst { id } = msg.payload;\n\nconst file = global.get(\"file\");\nif (!Array.isArray(file)) \n    throw \"File not present in global context. Please manually load it using the 'load' node.\";\nif (file.length !== numberOfMessages)\n    throw `The file contains ${file.length} lines, expected ${numberOfMessages}.`\n\nconst frameNumber = (personCodeLastFourDigits + id) % numberOfMessages;\nconst { Info, Message } = file.find((frame) => frame[\"No.\"] === frameNumber);\n\nreturn { payload: { id, Info, Message }};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "b3fa95becc464000"
            ]
        ]
    },
    {
        "id": "78852d3d07d3f13f",
        "type": "mqtt in",
        "z": "c33883f1dd3f683f",
        "name": "",
        "topic": "polimi/challenge_2/2023/id_code_generator",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "269f9f80bd3e6cbb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 300,
        "wires": [
            [
                "4ebeb951d694d9ea"
            ]
        ]
    },
    {
        "id": "12e04f943d282eaa",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Parse MQTT Publish packet",
        "func": "const { id, Info, Message } = msg.payload;\n\nconst topics = Info.split(',')\n    .map(s => s.substring(s.indexOf('[') + 1, s.indexOf(']')));\n// If Message is undefined (the csv has no value) we generate \n// the message array [null]\nconst messages = Message ? JSON.parse(`[${Message}]`) : new Array(topics.length).fill(undefined);\n\nif(messages.length !== topics.length)\n    throw `\n    The number of messages is different from the number of topics.\n    messages: ${messages}\n    topics: ${topics}\n    `\n    \nreturn { payload: { id, topics, messages }};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 300,
        "wires": [
            [
                "7783cb5f1244bffd"
            ]
        ]
    },
    {
        "id": "b3fa95becc464000",
        "type": "switch",
        "z": "c33883f1dd3f683f",
        "name": "Forward if Publish",
        "property": "payload.Info",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Publish Message",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 360,
        "wires": [
            [
                "12e04f943d282eaa"
            ]
        ]
    },
    {
        "id": "1a610cdc19881975",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Pass first 100 packets",
        "func": "var counter = global.get('counter') || 0;\nif (counter < 100) {\n    // Increment counter\n    counter++;\n    global.set('counter', counter);\n    node.warn(counter);\n    return msg;\n} else if (counter == 100) {\n    global.set('counter', 101);\n    node.warn('Input generation stopped.');\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 300,
        "wires": [
            [
                "8d6b0604653ded23",
                "eee261dab0f5e97b"
            ]
        ]
    },
    {
        "id": "c610aa4d3c5172ef",
        "type": "mqtt out",
        "z": "c33883f1dd3f683f",
        "name": "",
        "topic": "polimi/iot2023/challenge2/00000",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "269f9f80bd3e6cbb",
        "x": 1730,
        "y": 300,
        "wires": []
    },
    {
        "id": "7783cb5f1244bffd",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Extract publish messages",
        "func": "const { id, messages } = msg.payload;\n\nconst options = { timeZone: 'Europe/Rome', hour12: false };\nconst datetime = new Date().toLocaleString('it-IT', options);\n\nconst msgs = messages.map((message) => ({ \n    payload: {\n        timestamp: datetime, \n        id, \n        payload: message\n    }\n}))\n\n\n\nreturn [msgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 360,
        "wires": [
            [
                "97a03f7cbe260170",
                "c610aa4d3c5172ef"
            ]
        ]
    },
    {
        "id": "97a03f7cbe260170",
        "type": "debug",
        "z": "c33883f1dd3f683f",
        "name": "Send",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 360,
        "wires": []
    },
    {
        "id": "bd9ba5addae833e9",
        "type": "mqtt in",
        "z": "c33883f1dd3f683f",
        "name": "",
        "topic": "polimi/iot2023/challenge2/00000",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "269f9f80bd3e6cbb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 680,
        "wires": [
            [
                "b88939ec565aa2a1"
            ]
        ]
    },
    {
        "id": "275fc8832479a25c",
        "type": "switch",
        "z": "c33883f1dd3f683f",
        "name": "Forward if celsius",
        "property": "payload.payload.unit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 700,
        "wires": [
            [
                "8aec2780646abe3c",
                "8731aaea3858ac4e"
            ]
        ]
    },
    {
        "id": "796db3f1fe9bef7b",
        "type": "debug",
        "z": "c33883f1dd3f683f",
        "name": "Forwarded",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 760,
        "wires": []
    },
    {
        "id": "c1869ed7abb830f0",
        "type": "ui_chart",
        "z": "c33883f1dd3f683f",
        "name": "",
        "group": "3d123e26d3ef4f8d",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1410,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "8aec2780646abe3c",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Filter max range",
        "func": "const { range } = msg.payload.payload\nconst maxRange = range[1];\n\nreturn { payload: maxRange };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 740,
        "wires": [
            [
                "c1869ed7abb830f0"
            ]
        ]
    },
    {
        "id": "75109f8199e7f0c3",
        "type": "file",
        "z": "c33883f1dd3f683f",
        "name": "",
        "filename": "./output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1430,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "8731aaea3858ac4e",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Filter payload string",
        "func": "const { payload } = msg.payload\n\nreturn { payload: JSON.stringify(payload) };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 660,
        "wires": [
            [
                "75109f8199e7f0c3"
            ]
        ]
    },
    {
        "id": "26cdeaecd1846cc3",
        "type": "inject",
        "z": "c33883f1dd3f683f",
        "name": "Manual start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "START",
        "payloadType": "str",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "cc92531a83331ae7",
                "38f7039286b49083",
                "b65610c6e03b4ea3"
            ]
        ]
    },
    {
        "id": "cc92531a83331ae7",
        "type": "mqtt out",
        "z": "c33883f1dd3f683f",
        "name": "",
        "topic": "polimi/iot2023/challenge2/00000",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "269f9f80bd3e6cbb",
        "x": 390,
        "y": 40,
        "wires": []
    },
    {
        "id": "921b6491bfe2e60b",
        "type": "switch",
        "z": "c33883f1dd3f683f",
        "name": "Forward if global.active",
        "property": "active",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 700,
        "wires": [
            [
                "275fc8832479a25c",
                "796db3f1fe9bef7b"
            ]
        ]
    },
    {
        "id": "4254c4b3ec7dbedd",
        "type": "change",
        "z": "c33883f1dd3f683f",
        "name": "set global.active = true",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b88939ec565aa2a1",
        "type": "switch",
        "z": "c33883f1dd3f683f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "END",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "START",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 680,
        "wires": [
            [
                "5b59734bb160de99"
            ],
            [
                "921b6491bfe2e60b"
            ]
        ]
    },
    {
        "id": "3bee4c94e17e857c",
        "type": "change",
        "z": "c33883f1dd3f683f",
        "name": "set global.counter = 0",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 120,
        "wires": [
            [
                "4254c4b3ec7dbedd"
            ]
        ]
    },
    {
        "id": "b65610c6e03b4ea3",
        "type": "file",
        "z": "c33883f1dd3f683f",
        "name": "",
        "filename": "./output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 350,
        "y": 120,
        "wires": [
            [
                "3bee4c94e17e857c"
            ]
        ]
    },
    {
        "id": "5b59734bb160de99",
        "type": "change",
        "z": "c33883f1dd3f683f",
        "name": "set global.active = false",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4cdfa722593fc3ed",
        "type": "inject",
        "z": "c33883f1dd3f683f",
        "name": "Manual Stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "START",
        "payloadType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "8241c79c68d8e4fc"
            ]
        ]
    },
    {
        "id": "8241c79c68d8e4fc",
        "type": "change",
        "z": "c33883f1dd3f683f",
        "name": "set global.counter = 100",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "100",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "ec500797d3006e0d"
            ]
        ]
    },
    {
        "id": "ec500797d3006e0d",
        "type": "change",
        "z": "c33883f1dd3f683f",
        "name": "set global.active = false",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8d6b0604653ded23",
        "type": "debug",
        "z": "c33883f1dd3f683f",
        "name": "ID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 360,
        "wires": []
    },
    {
        "id": "4ebeb951d694d9ea",
        "type": "function",
        "z": "c33883f1dd3f683f",
        "name": "Forward if well formatted",
        "func": "if (typeof msg.payload === \"object\" && typeof msg.payload.id === \"string\" ) return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "1a610cdc19881975"
            ]
        ]
    },
    {
        "id": "38f7039286b49083",
        "type": "file in",
        "z": "c33883f1dd3f683f",
        "name": "challenge2023_2.csv",
        "filename": "./challenge2023_2.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "d36cf50129a291e5"
            ]
        ]
    },
    {
        "id": "d36cf50129a291e5",
        "type": "csv",
        "z": "c33883f1dd3f683f",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "No,Time,Source,Destination,Protocol,Length,Source Port,Destination Port,Info,Message",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "715fe72d76e011c5"
            ]
        ]
    },
    {
        "id": "715fe72d76e011c5",
        "type": "change",
        "z": "c33883f1dd3f683f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "file",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "269f9f80bd3e6cbb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3d123e26d3ef4f8d",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "6eaa4f666b452924",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6eaa4f666b452924",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]