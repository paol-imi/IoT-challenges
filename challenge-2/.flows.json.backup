[
    {
        "id": "306fd6c9f9703347",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f2f1d262a0365ca2",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Fetch frame",
        "func": "const personCodeLastFourDigits = 7668;\nconst numberOfMessages = 7711;\nconst { id } = msg.payload;\n\nconst file = global.get(\"file\");\nif (!Array.isArray(file)) \n    throw \"File not present in global context. Please manually load it using the 'load' node.\";\nif (file.length !== numberOfMessages)\n    throw `The file contains ${file.length} lines, expected ${numberOfMessages}.`\n\nconst frameNumber = (personCodeLastFourDigits + Number(id)) % numberOfMessages;\nconst { Info, Message } = file.find((frame) => frame[\"No.\"] === frameNumber);\n\nreturn { payload: { id, Info, Message }};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "b522734f5b0e35d4"
            ]
        ]
    },
    {
        "id": "6759f30f9b2bd678",
        "type": "mqtt in",
        "z": "306fd6c9f9703347",
        "name": "",
        "topic": "polimi/challenge_2/2023/id_code_generator",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "269f9f80bd3e6cbb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 360,
        "wires": [
            [
                "2b712f0d0fd418d5"
            ]
        ]
    },
    {
        "id": "71e8bc90a0b925ce",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Parse MQTT Publish packet",
        "func": "const { id, Info, Message } = msg.payload;\n\nconst topics = Info.split(',')\n    .map(s => s.substring(s.indexOf('[') + 1, s.indexOf(']')));\n// If Message is undefined (the csv has no value) we generate \n// the message array [null]\nconst messages = Message ? JSON.parse(`[${Message}]`) : new Array(topics.length).fill(undefined);\n\nif(messages.length !== topics.length)\n    throw `\n    The number of messages is different from the number of topics.\n    messages: ${messages}\n    topics: ${topics}\n    `\n    \nreturn { payload: { id, topics, messages }};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 360,
        "wires": [
            [
                "32ceb8d8e498e279"
            ]
        ]
    },
    {
        "id": "b522734f5b0e35d4",
        "type": "switch",
        "z": "306fd6c9f9703347",
        "name": "Forward if Publish",
        "property": "payload.Info",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Publish Message",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "71e8bc90a0b925ce"
            ]
        ]
    },
    {
        "id": "b835d425bd788912",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Pass first 100 packets",
        "func": "var counter = global.get('counter') || 0;\n\nif (counter < 100) {\n    // Increment counter\n    counter++;\n    global.set('counter', counter);\n    node.warn(counter);\n    if (counter === 100) {\n        node.warn('Input generation stopped.');\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 360,
        "wires": [
            [
                "f2f1d262a0365ca2",
                "4731c2ae93d2d77d"
            ]
        ]
    },
    {
        "id": "b49fd7e96bba8e38",
        "type": "mqtt out",
        "z": "306fd6c9f9703347",
        "name": "",
        "topic": "polimi/iot2023/challenge2/10677668",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "269f9f80bd3e6cbb",
        "x": 1750,
        "y": 360,
        "wires": []
    },
    {
        "id": "32ceb8d8e498e279",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Extract publish messages",
        "func": "const { id, messages } = msg.payload;\n\nconst options = { timeZone: 'Europe/Rome', hour12: false };\nconst datetime = new Date().toLocaleString('it-IT', options);\n\nconst msgs = messages.map((message) => ({ \n    payload: {\n        timestamp: datetime, \n        id, \n        payload: message\n    }\n}))\n\nreturn [msgs];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 420,
        "wires": [
            [
                "b49fd7e96bba8e38",
                "48adef1cf24eed6d"
            ]
        ]
    },
    {
        "id": "c98328610b9c2a93",
        "type": "mqtt in",
        "z": "306fd6c9f9703347",
        "name": "",
        "topic": "polimi/iot2023/challenge2/10677668",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "269f9f80bd3e6cbb",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 660,
        "wires": [
            [
                "8093e8250684f3aa",
                "8d7c65ff0ab1a250"
            ]
        ]
    },
    {
        "id": "15fd949dd862b6a6",
        "type": "switch",
        "z": "306fd6c9f9703347",
        "name": "Forward if celsius",
        "property": "payload.payload.unit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 950,
        "y": 680,
        "wires": [
            [
                "9ffe4c617c27014f",
                "177a266a55419a86"
            ]
        ]
    },
    {
        "id": "8d7c65ff0ab1a250",
        "type": "debug",
        "z": "306fd6c9f9703347",
        "name": "Forwarded",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 760,
        "wires": []
    },
    {
        "id": "3389d06d795d5b55",
        "type": "ui_chart",
        "z": "306fd6c9f9703347",
        "name": "",
        "group": "3d123e26d3ef4f8d",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1430,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "9ffe4c617c27014f",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Filter max range",
        "func": "const { range } = msg.payload.payload\nconst maxRange = range[1];\n\nreturn { payload: maxRange };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 720,
        "wires": [
            [
                "3389d06d795d5b55"
            ]
        ]
    },
    {
        "id": "263944ef760b3c1b",
        "type": "file",
        "z": "306fd6c9f9703347",
        "name": "",
        "filename": "./output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1450,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "177a266a55419a86",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Filter payload string",
        "func": "const { payload } = msg.payload\n\nreturn { payload: JSON.stringify(payload) };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "263944ef760b3c1b",
                "c71b52850a31529c"
            ]
        ]
    },
    {
        "id": "16e78c5098dc0032",
        "type": "inject",
        "z": "306fd6c9f9703347",
        "name": "Manual start",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "START",
        "payloadType": "str",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "86782c79bfb2ca0a",
                "a01335e6763df220",
                "25b970b67111930f"
            ]
        ]
    },
    {
        "id": "86782c79bfb2ca0a",
        "type": "mqtt out",
        "z": "306fd6c9f9703347",
        "name": "",
        "topic": "polimi/iot2023/challenge2/10677668",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "269f9f80bd3e6cbb",
        "x": 410,
        "y": 40,
        "wires": []
    },
    {
        "id": "40576ac301942429",
        "type": "switch",
        "z": "306fd6c9f9703347",
        "name": "Forward if global.active",
        "property": "active",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 680,
        "wires": [
            [
                "15fd949dd862b6a6"
            ]
        ]
    },
    {
        "id": "67c653d3521130d2",
        "type": "change",
        "z": "306fd6c9f9703347",
        "name": "set global.active = true",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "48201d78150eda7d"
            ]
        ]
    },
    {
        "id": "8093e8250684f3aa",
        "type": "switch",
        "z": "306fd6c9f9703347",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "END",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "START",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "6b3a9bd380031913"
            ],
            [
                "40576ac301942429"
            ]
        ]
    },
    {
        "id": "25b970b67111930f",
        "type": "change",
        "z": "306fd6c9f9703347",
        "name": "set global.counter = 0",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 120,
        "wires": [
            [
                "67c653d3521130d2"
            ]
        ]
    },
    {
        "id": "6b3a9bd380031913",
        "type": "change",
        "z": "306fd6c9f9703347",
        "name": "set global.active = false",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d83fc8af2c4134e2",
        "type": "inject",
        "z": "306fd6c9f9703347",
        "name": "Manual Stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "END",
        "payloadType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "339a64e2a1a4ecd0",
                "7f5ab73259012531"
            ]
        ]
    },
    {
        "id": "339a64e2a1a4ecd0",
        "type": "change",
        "z": "306fd6c9f9703347",
        "name": "set global.counter = 100",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "global",
                "to": "100",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "6633ff78edd89579"
            ]
        ]
    },
    {
        "id": "6633ff78edd89579",
        "type": "change",
        "z": "306fd6c9f9703347",
        "name": "set global.active = false",
        "rules": [
            {
                "t": "set",
                "p": "active",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a01335e6763df220",
        "type": "file in",
        "z": "306fd6c9f9703347",
        "name": "challenge2023_2.csv",
        "filename": "./challenge2023_2.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "3a8bca6ab0d133d2"
            ]
        ]
    },
    {
        "id": "3a8bca6ab0d133d2",
        "type": "csv",
        "z": "306fd6c9f9703347",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "No,Time,Source,Destination,Protocol,Length,Source Port,Destination Port,Info,Message",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 530,
        "y": 80,
        "wires": [
            [
                "ab9f95b8847ddcaf"
            ]
        ]
    },
    {
        "id": "ab9f95b8847ddcaf",
        "type": "change",
        "z": "306fd6c9f9703347",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "file",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c71b52850a31529c",
        "type": "debug",
        "z": "306fd6c9f9703347",
        "name": "Saved",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 560,
        "wires": []
    },
    {
        "id": "48adef1cf24eed6d",
        "type": "debug",
        "z": "306fd6c9f9703347",
        "name": "Send",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 420,
        "wires": []
    },
    {
        "id": "4731c2ae93d2d77d",
        "type": "debug",
        "z": "306fd6c9f9703347",
        "name": "ID",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 420,
        "wires": []
    },
    {
        "id": "7f5ab73259012531",
        "type": "mqtt out",
        "z": "306fd6c9f9703347",
        "name": "",
        "topic": "polimi/iot2023/challenge2/10677668",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "269f9f80bd3e6cbb",
        "x": 410,
        "y": 220,
        "wires": []
    },
    {
        "id": "2b712f0d0fd418d5",
        "type": "function",
        "z": "306fd6c9f9703347",
        "name": "Forward if well formatted",
        "func": "if (typeof msg.payload === \"object\" &&\n    Object.keys(msg.payload).length == 2 && \n    typeof msg.payload.id === \"string\" &&\n    typeof msg.payload.timestamp === \"string\") return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "b835d425bd788912"
            ]
        ]
    },
    {
        "id": "48201d78150eda7d",
        "type": "file",
        "z": "306fd6c9f9703347",
        "name": "",
        "filename": "./output.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 790,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "269f9f80bd3e6cbb",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3d123e26d3ef4f8d",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "6eaa4f666b452924",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6eaa4f666b452924",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]